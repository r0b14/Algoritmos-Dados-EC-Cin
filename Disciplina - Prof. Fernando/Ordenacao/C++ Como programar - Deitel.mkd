Algoritmos Mergesort e Quicksort

### Mergesort
- Explica√ß√£o detalhada e implementa√ß√£o come√ßam na p√°gina 788.
- C√≥digo da classe `MergeSort` est√° na Figura 20.5.
- Implementa√ß√£o do algoritmo (fun√ß√µes `sort`, `sortSubVector` e `merge`) est√° nas Figuras 20.6 e 20.7.
- Efici√™ncia do Mergesort explicada na p√°gina 791.

### Quicksort
- Explica√ß√£o detalhada e algoritmo est√£o na p√°gina 368.
- Exerc√≠cio de implementa√ß√£o do `quicksort` na p√°gina 369.
- Compara√ß√£o de efici√™ncia com outros algoritmos na Figura 20.8.

### Bubble Sort	
- Explica√ß√£o e implementa√ß√£o do **Bubble Sort** est√£o nos **Exerc√≠cios 20.5 e 20.6**.
- Uma explica√ß√£o adicional est√° no **Exerc√≠cio 7.11**, onde h√° um c√≥digo para ordenar um array de 10 inteiros usando Bubble Sort.

### Selection Sort
- Explica√ß√£o e implementa√ß√£o do **Selection Sort** est√£o na **Se√ß√£o 8.6**.
- O exerc√≠cio **7.31** tamb√©m prop√µe uma implementa√ß√£o de Selection Sort recursiva.

### Insertion Sort
- Explica√ß√£o e implementa√ß√£o do **Insertion Sort** est√£o na **Se√ß√£o 7.8**.
- O exerc√≠cio **20.3** menciona a compara√ß√£o entre Insertion Sort e Merge Sort.

### Shell Sort
- N√£o encontrei men√ß√£o direta ao **Shell Sort** no livro. Caso queira estud√°-lo, posso te ajudar com explica√ß√µes e implementa√ß√£o em C++.

### **Dicas para estudo**
1. **Leia a teoria** nas se√ß√µes indicadas.
2. **Implemente os algoritmos** em C++ e teste com diferentes conjuntos de dados.
3. **Analise a complexidade** de cada m√©todo e compare o desempenho em vetores ordenados e desordenados.
4. **Aprimore as vers√µes b√°sicas** dos algoritmos, aplicando otimiza√ß√µes onde poss√≠vel.

Se precisar de ajuda com o c√≥digo ou explica√ß√µes, me avise! üöÄ
